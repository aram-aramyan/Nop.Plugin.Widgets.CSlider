@model OneStepApplyVendorModel
@using Nop.Plugin.Pages.OneStepApplyVendor.Models;
@using Nop.Web.Framework;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Vendors.Apply").Text);
    //page class
    Html.AppendPageCssClassParts("html-apply-vendor-page");
}
<div class="page apply-vendor-page">
    <div class="page-title">
        <h1>@T("PageTitle.Vendors.Apply")</h1>
    </div>
    <div class="page-body">
        @Html.Action("TopicBlock", "Topic", new { systemName = "ApplyVendor" })
        @Html.Widget("applyvendor_top")
        @if (Model.DisableFormInput)
        {
            <div class="result">
                @Model.Result
            </div>
        }
        else
        {
            using (Html.BeginForm(null, null, FormMethod.Post, new RouteValueDictionary { { "enctype", "multipart/form-data" } }))
            {
                @Html.AntiForgeryToken()
                var validationSummary = Html.ValidationSummary(true);
                if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
                {
                    <div class="message-error">@validationSummary</div>
                }
                <div class="fieldset">
                    <div class="form-fields">
                        <div class="inputs">
                            @Html.LabelFor(model => model.Company)
                            @Html.TextBoxFor(model => model.Company, new { @class = "name", placeholder = T("OneStepApplyVendor.ApplyAccount.Company.Hint") })
                            @Html.RequiredHint()
                            @Html.ValidationMessageFor(model => model.Company)
                        </div>
                        <div class="inputs">
                            @Html.LabelFor(model => model.CountryId)
                            @Html.DropDownList("CountryId", Model.AvailableCountries)
                            @Html.RequiredHint()
                            @Html.ValidationMessageFor(model => model.CountryId)
                        </div>
                        <div class="inputs">
                            @Html.LabelFor(model => model.Phone)
                            @Html.TextBoxFor(model => model.Phone, new { @class = "name", placeholder = T("OneStepApplyVendor.ApplyAccount.Phone.Hint") })
                            @Html.ValidationMessageFor(model => model.Phone)
                        </div>
                        <div class="inputs">
                            @Html.LabelFor(model => model.Mail)
                            @Html.TextBoxFor(model => model.Mail, new { @class = "email", placeholder = T("OneStepApplyVendor.ApplyAccount.Mail.Hint") })
                            @Html.RequiredHint()
                            @Html.ValidationMessageFor(model => model.Mail)
                        </div>
                        <div class="inputs">
                            @Html.LabelFor(model => model.FirstName)
                            @Html.TextBoxFor(model => model.FirstName, new { @class = "name", placeholder = T("OneStepApplyVendor.ApplyAccount.FirstName.Hint") })
                            @Html.ValidationMessageFor(model => model.FirstName)
                        </div>
                        <div class="inputs">
                            @Html.LabelFor(model => model.LastName)
                            @Html.TextBoxFor(model => model.LastName, new { @class = "name", placeholder = T("OneStepApplyVendor.ApplyAccount.LastName.Hint") })
                            @Html.ValidationMessageFor(model => model.LastName)
                        </div>
                        <div class="inputs">
                            @Html.LabelFor(model => model.WebSite)
                            @Html.TextBoxFor(model => model.WebSite, new { @class = "name", placeholder = T("OneStepApplyVendor.ApplyAccount.WebSite.Hint") })
                            @Html.ValidationMessageFor(model => model.WebSite)
                        </div>
                        <div class="inputs categories-checkbox-list">
                            @Html.LabelFor(model => model.Categories)
                            <ul>
                                @foreach (var cat in Model.AvailableCategories)
                                {
                                    <li>
                                        <input type="checkbox" class="checkbox" name="Categories" value="@cat.Value" id="Category_@cat.Value" />
                                        <label for="Category_@cat.Value">@cat.Text</label>
                                    </li>
                                }
                            </ul>
                        </div>
                        <div class="inputs">
                            @Html.LabelFor(model => model.Brands)
                            @Html.TextAreaFor(model => model.Brands, new { @class = "description" })
                        </div>
                        <div class="inputs">
                            @Html.LabelFor(model => model.AdditionalInfo)
                            @Html.TextAreaFor(model => model.AdditionalInfo, new { @class = "description" })
                        </div>
                         @if (Model.DisplayCaptcha)
                        {
                            <div class="captcha-box">
                                @Html.Raw(Html.GenerateCaptcha())
                            </div>
                        }
                    </div>
                </div>
                <div class="buttons">
                    <input type="submit" name="send-email" class="button-1 apply-vendor-button" value="@T("Vendors.ApplyAccount.Button")" />
                </div>
            }
        }
        @Html.Widget("applyvendor_bottom")
    </div>
</div>
