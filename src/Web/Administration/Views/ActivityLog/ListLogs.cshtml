@model ActivityLogSearchModel
@{
    var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

    //page title
    ViewBag.Title = T("Admin.Configuration.ActivityLog.ActivityLog").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Activity log list");
}

@Html.AntiForgeryToken()
<div class="content-header clearfix">
    <h1 class="pull-left">
        @T("Admin.Configuration.ActivityLog.ActivityLog")
    </h1>
    <div class="pull-right">
        <a href="@Url.Action("ClearAll")" class="btn bg-red">
            <i class="fa fa-trash-o"></i>
            @T("Admin.Common.Clear")
        </a>
    </div>
</div>

<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default panel-search">
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.NopLabelFor(model => model.CreatedOnFrom)
                                </div>
                                <div class="col-md-8">
                                    @Html.NopEditorFor(model => model.CreatedOnFrom)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.NopLabelFor(model => model.CreatedOnTo)
                                </div>
                                <div class="col-md-8">
                                    @Html.NopEditorFor(model => model.CreatedOnTo)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.NopLabelFor(model => model.IpAddress)
                                </div>
                                <div class="col-md-8">
                                    @Html.NopEditorFor(model => model.IpAddress)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.NopLabelFor(model => model.ActivityLogTypeId)
                                </div>
                                <div class="col-md-8">
                                    @Html.NopDropDownList("ActivityLogTypeId", Model.ActivityLogType)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-8 col-md-offset-4">
                                    <button type="button" id="search-log" class="btn btn-primary btn-search">
                                        <i class="fa fa-search"></i>
                                        @T("Admin.Common.Search")
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="panel panel-default">
                <div class="panel-body">
                    <div id="activityLog-grid"></div>

                    <script>
                        $(document).ready(function() {
                            $("#activityLog-grid").kendoGrid({
                                dataSource: {
                                    type: "json",
                                    transport: {
                                        read: {
                                            url: "@Html.Raw(Url.Action("ListLogs", "ActivityLog"))",
                                            type: "POST",
                                            dataType: "json",
                                            data: additionalData
                                        },
                                        destroy: {
                                            url: "@Html.Raw(Url.Action("AcivityLogDelete", "ActivityLog"))",
                                            type: "POST",
                                            dataType: "json",
                                            data: addAntiForgeryToken
                                        }
                                    },
                                    schema: {
                                        data: "Data",
                                        total: "Total",
                                        errors: "Errors",
                                        model: {
                                            id: "Id",
                                            fields: {
                                                //do not implicitly specify all fields
                                                //we do it only for fields which implicitly require it
                                                //otherwise, they'll be formatted wrong way
                                                CreatedOn: { type: "date" }
                                            }
                                        }
                                    },
                                    error: function(e) {
                                        display_kendoui_grid_error(e);
                                        // Cancel the changes
                                        this.cancelChanges();
                                    },
                                    pageSize: @(defaultGridPageSize),
                                    serverPaging: true,
                                    serverFiltering: true,
                                    serverSorting: true
                                },
                                pageable: {
                                    refresh: true,
                                    pageSizes: [@(gridPageSizes)],
                                    @Html.Partial("_GridPagerMessages")
                                },
                                editable: {
                                    confirmation: "@T("Admin.Common.DeleteConfirmation")",
                                    mode: "inline"
                                },
                                scrollable: false,
                                columns: [
                                {
                                    field: "ActivityLogTypeName",
                                    title: "@T("Admin.Configuration.ActivityLog.ActivityLog.Fields.ActivityLogType")",
                                    width: 200
                                }, {
                                    field: "CustomerId",
                                    title: "@T("Admin.Configuration.ActivityLog.ActivityLog.Fields.Customer")",
                                    width: 100,
                                    template: '<a href="@Url.Content("~/Admin/Customer/Edit/")#=CustomerId#">#:CustomerEmail#</a>'
                                }, {
                                    field: "IpAddress",
                                    title: "@T("Admin.Customers.Customers.ActivityLog.IpAddress")",
                                    width: 100
                                }, {
                                    field: "Comment",
                                    title: "@T("Admin.Configuration.ActivityLog.ActivityLog.Fields.Comment")"
                                }, {
                                    field: "CreatedOn",
                                    title: "@T("Admin.System.Log.Fields.CreatedOn")",
                                    width: 200,
                                    type: "date",
                                    format: "{0:G}"
                                }, {
                                    command: { name: "destroy", text: "@T("Admin.Common.Delete")" },
                                    title: "@T("Admin.Common.Delete")",
                                        width: 100
                                    }
                                ]
                            });
                        });
                    </script>
                    <script type="text/javascript">
                        $(document).ready(function() {
                            $('#search-log').click(function() {
                                var grid = $('#activityLog-grid').data('kendoGrid');
                                grid.dataSource.page(1); //new search. Set page size to 1
                                //grid.dataSource.read(); we already loaded the grid above using "page" function
                                return false;
                            });
                        });

                        function additionalData() {
                            var data = {
                                CreatedOnFrom: $('#@Html.FieldIdFor(model => model.CreatedOnFrom)').val(),
                                CreatedOnTo: $('#@Html.FieldIdFor(model => model.CreatedOnTo)').val(),
                                IpAddress: $('#@Html.FieldIdFor(model => model.IpAddress)').val(),
                                ActivityLogTypeId: $('#ActivityLogTypeId').val()
                            };
                            addAntiForgeryToken(data);
                            return data;
                        }
                    </script>
                </div>
            </div>
        </div>
    </div>
</div>